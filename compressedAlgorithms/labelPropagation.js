jLabelPropagation=function(){let t,o,n,e={};function r(t){let o,n,e;for(e=t.length-1;e>0;e--)o=Math.floor(Math.random()*(e+1)),n=t[e],t[e]=t[o],t[o]=n;return t}function c(t,o,n){let e={};return function(t,o){return void 0===t._assoc_mat[o]?[]:Object.keys(t._assoc_mat[o])}(o,t).forEach(function(r){if(r!==t){let c=o._assoc_mat[t][r]||1,u=n.nodes_to_com[r];e[u]=(e[u]||0)+c}}),e}function u(t,o,n){let e=c(t,o,n);return e[n.nodes_to_com[t]]===Math.max(e)}function f(t,o,n){let e=function(t){let o=Object.values(t),n=Math.max.apply(null,o),e=Object.keys(t),r=[];return e.forEach(function(o){t[o]===n&&r.push(o)}),r}(c(t,o,n));return e[Math.floor(Math.random()*e.length)]}function i(t){let o=0,n=function t(o){if(null===o||"object"!=typeof o)return o;let n=o.constructor();for(let e in o)n[e]=t(o[e]);return n}(t),e={};return Object.keys(t).forEach(function(r){let c=t[r],u=void 0===e[c]?-1:e[c];-1===u&&(e[c]=o,u=o,o+=1),n[r]=u}),n}let a=function(){return function(t,o){let n={};for(function(t,o,n){o.nodes_to_com={},void 0===n?t.nodes.forEach(function(t,n){o.nodes_to_com[t]=n}):t.nodes.forEach(function(t){o.nodes_to_com[t]=n[t]})}(e,n,o);;){let o=!1,e=n.nodes_to_com;if(r(t.nodes).forEach(function(e){if(!1===u(e,t,n)){let r=f(e,t,n);n.nodes_to_com[e]=+r,o=!0}}),e===n.nodes_to_com)break}return i(n.nodes_to_com)}(e,n)};return a.nodes=function(o){return o.length>0&&(t=o),a},a.edges=function(n){if(void 0===t)throw"Please provide the graph nodes first!";if(n.length>0){o=n;let r=function(t){let o={};return t.forEach(function(t){o[t.source]=o[t.source]||{},o[t.source][t.target]=1,o[t.target]=o[t.target]||{},o[t.target][t.source]=1}),o}(edges);e={nodes:t,edges:o,_assoc_mat:r}}return a},a.partition_init=function(t){return t.length>0&&(n=t),a},a};